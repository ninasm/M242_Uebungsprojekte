
D:\GIBZ\4.Semester\M242\prj\helloworld\Build\helloworld.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000256  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000023  00800060  00800060  000002ca  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000338  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012f4  00000000  00000000  00000420  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ab  00000000  00000000  00001714  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000072b  00000000  00000000  00001fbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002bc  00000000  00000000  000026ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000768  00000000  00000000  000029a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b9d  00000000  00000000  00003110  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00003cad  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e5       	ldi	r30, 0x56	; 86
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a3 38       	cpi	r26, 0x83	; 131
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 29 01 	jmp	0x252	; 0x252 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include <util\delay.h>

#include <inttypes.h>

int main(void)
{
  92:	0f 93       	push	r16
  94:	1f 93       	push	r17
  96:	cf 93       	push	r28
  98:	df 93       	push	r29
	Usart_Init();
  9a:	0e 94 94 00 	call	0x128	; 0x128 <Usart_Init>
  9e:	ca e0       	ldi	r28, 0x0A	; 10
  a0:	d0 e0       	ldi	r29, 0x00	; 0
  a2:	04 e1       	ldi	r16, 0x14	; 20
  a4:	10 e0       	ldi	r17, 0x00	; 0
	
	
	uint8_t i = 10;
	for (; i < 20; i++)
	{
		Usart_Trace1(1,(uint8_t)((uint8_t)i));
  a6:	6c 2f       	mov	r22, r28
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <Usart_Trace1>
		Usart_Trace3(2,(uint8_t)((uint8_t)i), (uint8_t)((uint16_t)(i*2)>>8),(uint8_t)((uint8_t)i*2));
  b0:	20 2f       	mov	r18, r16
  b2:	41 2f       	mov	r20, r17
  b4:	6c 2f       	mov	r22, r28
  b6:	82 e0       	ldi	r24, 0x02	; 2
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <Usart_Trace3>
		Usart_Trace3(3,(uint8_t)((uint8_t)i), (uint8_t)((uint16_t)(i * i)>>8),(uint8_t)((uint8_t)i * i));
  be:	cc 9f       	mul	r28, r28
  c0:	20 2d       	mov	r18, r0
  c2:	11 24       	eor	r1, r1
  c4:	cc 9f       	mul	r28, r28
  c6:	c0 01       	movw	r24, r0
  c8:	cd 9f       	mul	r28, r29
  ca:	90 0d       	add	r25, r0
  cc:	90 0d       	add	r25, r0
  ce:	11 24       	eor	r1, r1
  d0:	49 2f       	mov	r20, r25
  d2:	6c 2f       	mov	r22, r28
  d4:	83 e0       	ldi	r24, 0x03	; 3
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <Usart_Trace3>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  dc:	9f e3       	ldi	r25, 0x3F	; 63
  de:	2d e0       	ldi	r18, 0x0D	; 13
  e0:	83 e0       	ldi	r24, 0x03	; 3
  e2:	91 50       	subi	r25, 0x01	; 1
  e4:	20 40       	sbci	r18, 0x00	; 0
  e6:	80 40       	sbci	r24, 0x00	; 0
  e8:	e1 f7       	brne	.-8      	; 0xe2 <main+0x50>
  ea:	00 c0       	rjmp	.+0      	; 0xec <main+0x5a>
  ec:	00 00       	nop
  ee:	0e 5f       	subi	r16, 0xFE	; 254
  f0:	1f 4f       	sbci	r17, 0xFF	; 255
  f2:	21 96       	adiw	r28, 0x01	; 1
{
	Usart_Init();
	
	
	uint8_t i = 10;
	for (; i < 20; i++)
  f4:	c4 31       	cpi	r28, 0x14	; 20
  f6:	d1 05       	cpc	r29, r1
  f8:	b1 f6       	brne	.-84     	; 0xa6 <main+0x14>
		Usart_Trace3(2,(uint8_t)((uint8_t)i), (uint8_t)((uint16_t)(i*2)>>8),(uint8_t)((uint8_t)i*2));
		Usart_Trace3(3,(uint8_t)((uint8_t)i), (uint8_t)((uint16_t)(i * i)>>8),(uint8_t)((uint8_t)i * i));
		_delay_ms(1000);
	}
	return 0;
  fa:	80 e0       	ldi	r24, 0x00	; 0
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	df 91       	pop	r29
 100:	cf 91       	pop	r28
 102:	1f 91       	pop	r17
 104:	0f 91       	pop	r16
 106:	08 95       	ret

00000108 <EnterAtomic>:
 108:	f8 94       	cli
 10a:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <_enterAtomicNesting>
 10e:	8f 5f       	subi	r24, 0xFF	; 255
 110:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_enterAtomicNesting>
 114:	08 95       	ret

00000116 <LeaveAtomic>:
 116:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <_enterAtomicNesting>
 11a:	81 50       	subi	r24, 0x01	; 1
 11c:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_enterAtomicNesting>
 120:	81 11       	cpse	r24, r1
 122:	01 c0       	rjmp	.+2      	; 0x126 <LeaveAtomic+0x10>
 124:	78 94       	sei
 126:	08 95       	ret

00000128 <Usart_Init>:
 128:	10 bc       	out	0x20, r1	; 32
 12a:	85 e0       	ldi	r24, 0x05	; 5
 12c:	89 b9       	out	0x09, r24	; 9
 12e:	86 e8       	ldi	r24, 0x86	; 134
 130:	80 bd       	out	0x20, r24	; 32
 132:	88 e9       	ldi	r24, 0x98	; 152
 134:	8a b9       	out	0x0a, r24	; 10
 136:	78 94       	sei
 138:	08 95       	ret

0000013a <Usart_PutChar>:
 13a:	8c b9       	out	0x0c, r24	; 12
 13c:	5d 9b       	sbis	0x0b, 5	; 11
 13e:	fe cf       	rjmp	.-4      	; 0x13c <Usart_PutChar+0x2>
 140:	08 95       	ret

00000142 <Usart_PutShort>:
 142:	9c b9       	out	0x0c, r25	; 12
 144:	5d 9b       	sbis	0x0b, 5	; 11
 146:	fe cf       	rjmp	.-4      	; 0x144 <Usart_PutShort+0x2>
 148:	8c b9       	out	0x0c, r24	; 12
 14a:	5d 9b       	sbis	0x0b, 5	; 11
 14c:	fe cf       	rjmp	.-4      	; 0x14a <Usart_PutShort+0x8>
 14e:	08 95       	ret

00000150 <Usart_TraceN>:
 150:	ef 92       	push	r14
 152:	ff 92       	push	r15
 154:	0f 93       	push	r16
 156:	1f 93       	push	r17
 158:	cf 93       	push	r28
 15a:	df 93       	push	r29
 15c:	ec 01       	movw	r28, r24
 15e:	e6 2e       	mov	r14, r22
 160:	f7 2e       	mov	r15, r23
 162:	14 2f       	mov	r17, r20
 164:	0e 94 84 00 	call	0x108	; 0x108 <EnterAtomic>
 168:	85 ea       	ldi	r24, 0xA5	; 165
 16a:	0e 94 9d 00 	call	0x13a	; 0x13a <Usart_PutChar>
 16e:	81 2f       	mov	r24, r17
 170:	88 6a       	ori	r24, 0xA8	; 168
 172:	0e 94 9d 00 	call	0x13a	; 0x13a <Usart_PutChar>
 176:	ce 01       	movw	r24, r28
 178:	0e 94 a1 00 	call	0x142	; 0x142 <Usart_PutShort>
 17c:	cf ef       	ldi	r28, 0xFF	; 255
 17e:	c1 0f       	add	r28, r17
 180:	11 16       	cp	r1, r17
 182:	4c f4       	brge	.+18     	; 0x196 <Usart_TraceN+0x46>
 184:	0e 2d       	mov	r16, r14
 186:	1f 2d       	mov	r17, r15
 188:	f8 01       	movw	r30, r16
 18a:	81 91       	ld	r24, Z+
 18c:	8f 01       	movw	r16, r30
 18e:	0e 94 9d 00 	call	0x13a	; 0x13a <Usart_PutChar>
 192:	c1 50       	subi	r28, 0x01	; 1
 194:	c8 f7       	brcc	.-14     	; 0x188 <Usart_TraceN+0x38>
 196:	0e 94 8b 00 	call	0x116	; 0x116 <LeaveAtomic>
 19a:	df 91       	pop	r29
 19c:	cf 91       	pop	r28
 19e:	1f 91       	pop	r17
 1a0:	0f 91       	pop	r16
 1a2:	ff 90       	pop	r15
 1a4:	ef 90       	pop	r14
 1a6:	08 95       	ret

000001a8 <Usart_Trace1>:
 1a8:	cf 93       	push	r28
 1aa:	df 93       	push	r29
 1ac:	1f 92       	push	r1
 1ae:	cd b7       	in	r28, 0x3d	; 61
 1b0:	de b7       	in	r29, 0x3e	; 62
 1b2:	69 83       	std	Y+1, r22	; 0x01
 1b4:	41 e0       	ldi	r20, 0x01	; 1
 1b6:	be 01       	movw	r22, r28
 1b8:	6f 5f       	subi	r22, 0xFF	; 255
 1ba:	7f 4f       	sbci	r23, 0xFF	; 255
 1bc:	0e 94 a8 00 	call	0x150	; 0x150 <Usart_TraceN>
 1c0:	0f 90       	pop	r0
 1c2:	df 91       	pop	r29
 1c4:	cf 91       	pop	r28
 1c6:	08 95       	ret

000001c8 <Usart_Trace3>:
 1c8:	cf 93       	push	r28
 1ca:	df 93       	push	r29
 1cc:	00 d0       	rcall	.+0      	; 0x1ce <Usart_Trace3+0x6>
 1ce:	1f 92       	push	r1
 1d0:	cd b7       	in	r28, 0x3d	; 61
 1d2:	de b7       	in	r29, 0x3e	; 62
 1d4:	69 83       	std	Y+1, r22	; 0x01
 1d6:	4a 83       	std	Y+2, r20	; 0x02
 1d8:	2b 83       	std	Y+3, r18	; 0x03
 1da:	43 e0       	ldi	r20, 0x03	; 3
 1dc:	be 01       	movw	r22, r28
 1de:	6f 5f       	subi	r22, 0xFF	; 255
 1e0:	7f 4f       	sbci	r23, 0xFF	; 255
 1e2:	0e 94 a8 00 	call	0x150	; 0x150 <Usart_TraceN>
 1e6:	0f 90       	pop	r0
 1e8:	0f 90       	pop	r0
 1ea:	0f 90       	pop	r0
 1ec:	df 91       	pop	r29
 1ee:	cf 91       	pop	r28
 1f0:	08 95       	ret

000001f2 <__vector_13>:
 1f2:	1f 92       	push	r1
 1f4:	0f 92       	push	r0
 1f6:	0f b6       	in	r0, 0x3f	; 63
 1f8:	0f 92       	push	r0
 1fa:	11 24       	eor	r1, r1
 1fc:	2f 93       	push	r18
 1fe:	8f 93       	push	r24
 200:	9f 93       	push	r25
 202:	ef 93       	push	r30
 204:	ff 93       	push	r31
 206:	19 c0       	rjmp	.+50     	; 0x23a <__vector_13+0x48>
 208:	2c b1       	in	r18, 0x0c	; 12
 20a:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <USART_rxBufferIn>
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	01 96       	adiw	r24, 0x01	; 1
 212:	8f 71       	andi	r24, 0x1F	; 31
 214:	90 78       	andi	r25, 0x80	; 128
 216:	99 23       	and	r25, r25
 218:	24 f4       	brge	.+8      	; 0x222 <__vector_13+0x30>
 21a:	01 97       	sbiw	r24, 0x01	; 1
 21c:	80 6e       	ori	r24, 0xE0	; 224
 21e:	9f 6f       	ori	r25, 0xFF	; 255
 220:	01 96       	adiw	r24, 0x01	; 1
 222:	90 91 60 00 	lds	r25, 0x0060	; 0x800060 <__data_end>
 226:	89 17       	cp	r24, r25
 228:	41 f0       	breq	.+16     	; 0x23a <__vector_13+0x48>
 22a:	e0 91 61 00 	lds	r30, 0x0061	; 0x800061 <USART_rxBufferIn>
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	ed 59       	subi	r30, 0x9D	; 157
 232:	ff 4f       	sbci	r31, 0xFF	; 255
 234:	20 83       	st	Z, r18
 236:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <USART_rxBufferIn>
 23a:	5f 99       	sbic	0x0b, 7	; 11
 23c:	e5 cf       	rjmp	.-54     	; 0x208 <__vector_13+0x16>
 23e:	ff 91       	pop	r31
 240:	ef 91       	pop	r30
 242:	9f 91       	pop	r25
 244:	8f 91       	pop	r24
 246:	2f 91       	pop	r18
 248:	0f 90       	pop	r0
 24a:	0f be       	out	0x3f, r0	; 63
 24c:	0f 90       	pop	r0
 24e:	1f 90       	pop	r1
 250:	18 95       	reti

00000252 <_exit>:
 252:	f8 94       	cli

00000254 <__stop_program>:
 254:	ff cf       	rjmp	.-2      	; 0x254 <__stop_program>
